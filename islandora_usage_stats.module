<?php

/**
 * @file
 * 
 */

/**
 * Implementation of hook_menu().
 */
function islandora_usage_stats_menu() {

  $items = array();

  /**
   * Internal route with 2 wildcard matches
   */
//   $items['download_ds/%/%'] = array(
//     'title' => 'Download datastream',
//     'page callback' => 'drupal_get_form',
//     'page arguments' => array('islandora_usage_stats_download_ds_form', 1, 2),
//     'access callback' => 'user_access',
//     'access arguments' => array('access content'),
//     'type' => MENU_CALLBACK,
//   );
  
  $items['download_ds/%/%'] = array(
      'title' => 'Download datastream',
      'page callback' => 'islandora_usage_stats_download_ds_form',
      'page arguments' => array(1, 2),
      'access callback' => 'user_access',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );

//   $items['admin/settings/islandora_usage_stats'] = array(
//     'title' => 'Islandora Usage Tracking Settings',
//     'page callback' => 'drupal_get_form',
//     'page arguments' => array('islandora_usage_stats_admin_settings'),
//     'access callback' => 'user_access',
//     'access arguments' => array('manage tracking'),
//     'type' => MENU_NORMAL_ITEM,
//   );
  
  $items['admin/config/islandora_usage_stats'] = array(
  	'title' => 'Islandora Usage Stats',
  	'description' => 'Adjust viewing stats options',
    'position' => 'right',
  	'weight' => -5,
  	'page callback' => 'system_admin_menu_block_page',
  	'access arguments' => array('Manage usage tracking'),
  	'file' => 'system.admin.inc',
  	'file path' => drupal_get_path('module', 'system'),
  );
  
  $items['admin/config/islandora_usage_stats/settings'] = array(
  	'title' => 'Islandora Usage Stats settings',
  	'description' => 'Change how usage stats behave.',
  	'page callback' => 'drupal_get_form',
  	'page arguments' => array('islandora_usage_stats_admin_settings'),
  	'access arguments' => array('Manage usage tracking'),
  	'type' => MENU_NORMAL_ITEM,
  	'file' => 'islandora_usage_stats.admin.inc',
  );

  return $items;
}

function islandora_usage_stats_permission() {
  return array(
  		'Manage usage stats' => array(
		  	'title' => t('Manage usage tracking'),
		    'description' => t('Manage usage tracking for the Islandora Usage Stats module'),
  		),
  );
}

/**
 * Form called when paths with link 'download_ds/$pid/$dsid' are clicked
 */ 
// function islandora_usage_stats_download_ds_form(array &$form_state, $pid, $dsid) {
function islandora_usage_stats_download_ds_form($pid, $dsid) {
  global $base_url;
  
  $object = islandora_object_load($pid);
  
//   $url = $base_url . '/fedora/repository/' . $pid . '/' . $dsid . '/content';
  
  if (!$object) {
    drupal_set_message(t('Object could not be loaded from islandora!'));
    return;
  }
  
  $sanitized_label = preg_replace('/[^A-Za-z0-9_\-]|\.pdf$/', '_', $object->label);
  $download_url = 'islandora/object/' . $object->id . '/datastream/OBJ/download/' . $sanitized_label . '.pdf';
  
  $datastream = $object[$dsid];
  
  if (!$datastream) {
      drupal_set_message(t('Could not get datastream, id: ' . $pid . ' , dsid: ' . $dsid));
      return;
  }
  
  $mime_type = $datastream->mimeType;
  
  if (!$mime_type) {
    drupal_set_message(t('Could not get mimetype'));
    return;
  }
  
  $extension = system_mime_type_extension($mime_type);
  
  $file = '';
  $file = $datastream->getContent($file);
  
  $ds_name = $datastream->id;
  
  // track the download 
  $track = new islandora_usage_stats($pid);
  $result = $track->add_ds_count($ds_name); // increase data stream tracking number by 1
  
  // redirect to the file or error
  if ($file) {
    drupal_add_http_header('Content-type', 'application/x-unknown; utf-8');
//     drupal_add_http_header("Content-Disposition: attachment; filename=" . $pid . '-' . $ds_name . '.' . $extension);
    drupal_add_http_header('Content-Disposition', 'attachment; filename' . $sanitized_label);
    echo $file;
    exit;
  }
  else {
    drupal_set_message(t('Specified file does not exist!'));
  }
}

function system_mime_type_extensions() {
  // Returns the system MIME type mapping of MIME types to extensions, as defined in /etc/mime.types (considering the first
  // extension listed to be canonical).
  $out = array();
  $file = fopen('/etc/mime.types', 'r');
  while (($line = fgets($file)) !== FALSE) {
    $line = trim(preg_replace('/#.*/', '', $line));
    if (!$line)
      continue;
    $parts = preg_split('/\s+/', $line);
    if (count($parts) == 1)
      continue;
    $type = array_shift($parts);
    if (!isset($out[$type]))
      $out[$type] = array_shift($parts);
  }
  fclose($file);
  return $out;
}

function system_mime_type_extension($type) {
  // Returns the canonical file extension for the MIME type specified, as defined in /etc/mime.types (considering the first
  // extension listed to be canonical).
  //
    // $type - the MIME type
  static $exts;
  if (!isset($exts))
    $exts = system_mime_type_extensions();
  return isset($exts[$type]) ? $exts[$type] : NULL;
}



/**
 * Implements hook_islandora_view_object to track usage stats 
 * 
 * @param unknown $object the islandora object
 * @param unknown $user the user accessing the object
 * @param unknown $page_number
 */
function islandora_usage_stats_islandora_view_object($object, $user, $page_number) {
  $track = new islandora_usage_stats($object->id);
  $track->add_page_count();
}

/**
 * Sets up tracking variables for the Islandora PDF module
 * 
 * @param array $variables
 */
function islandora_usage_stats_preprocess_islandora_pdf(&$variables)
{
    $islandora_object = $variables['islandora_object'];
    $id = $islandora_object->id;
    $label = $islandora_object->label;
    
    $track = new islandora_usage_stats($id);

    $viewed     = $track->read_page_count();
    $downloaded = $track->read_ds_count('OBJ');

    $variables['times_viewed']      = $viewed['count'];
    $variables['time_last_viewed']  = $viewed['time'];
    
    $variables['times_downloaded']      = $downloaded['count'];
    $variables['time_last_downloaded']  = $downloaded['time'];
    
    $variables['islandora_download_link'] = l(t('Download PDF'), 'download_ds/' . $id . '/OBJ/'. $label);
        
}
